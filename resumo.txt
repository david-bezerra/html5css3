1. CLIENT - SERVER

Rotas: caminho entre o cliente e o servidor.
DNS: traduz a URL de um site em endereço ip.
Cliente faz a requisição primeiro ao DNS, o qual devolve o ip e em seguida o cliente requisita os dados ao servidor.
Domínio: nome do site.
Hospedagem: local onde o site é armazenado.

ex.: www.facebook.com/login
A URL é composta por todas as partes abaixo
www: sub-domínio
facebook: domínio
com: TLD
login: caminho

2. OBJETIVO DO HTML, CSS, JS
A linguagem de HTML é focada em conteúdo (texto, imagens, vídeos, tabelas).
CSS é focada em design, estilo, forma (cores, sombras, tamanhos, posicionamentos).
JS é focado em interatividade (menus, animações, pop-us, validações).

Client-side: front-end (html, css, Js). O foco é na experiência e interatividade do usuário.
Server-side: back-end (LPs). O foco é a interação entre o código desenvolvido e o servidor.

3. TAGS HTML
- <!DOCTYPE html>: diz ao browser que é HTML 5.
- <html lang="pt-br"> </html: onde todo o código da página ficará.
- <head> </head>: é a parte de metadados.
- <body> </body: onde estará o código html.
- <h1> </h1>: títulos.
- <p> </p: parágrafos.
- <hr>: linha horizontal.
- <strong>: tag para negritar.
- <em>: tag deixar em itálico.
- <small>: tag para deixar a letra pequena.
- <del>: tag que risca a palavra.
- <ins>: tag que sublinha.
- <sup>: sobrescrito.
- <sub>: texto subscrito.
- <code>: para definir o mesmo espaço para cada caracter.
- <pre>: exibe o conteúdo definido dentro da tag com identação no formato código.
- <q>: usado para fazer citação simples. Seu resultado gera aspas. Lê-se quote.
- <blockquote>: tag utilizada para fazer citações em bloco. A tag aceita um parâmetro cite="" para inserir a fonte da citação.
- <abbr>: tag para dar significado as siglas de um texto.
- <bdo dir="ltr">/<bdo dir="rtl">: inverte o texto.
- <ol>: lista ordenada.
    + A tag <ol> possui o parâmetro type que define como os itens desta lista serão numerados. 
    + O parâmetro start define em qual numeração será iniciada a lista.
- <li>: item da lista.
- <ul>: lista desordenada.
    + O parâmetro type="" permite alterar o elemento da lista para disk, circle, square.
- <dl>: data list. Cria uma lista de dados.
- <dt>: data table. É o nome da coluna.
- <dr>: data row. Nome da linha.
- <dd>: é a definição do termo.
- <header>: utilizada para colocar logo, barra de pesquisa (toolbar) etc.
- <nav>: tag para reunir os links navegáveis.
- <main>: onde será desenvolvido a parte principal do código.
- <footer>: utilizado para as notas de rodapé, quem somos, informações adicionais.
- <figure>: para reunir todas as tags <img>.
- <figcaption>: descrição da imagem.
- <video>: tag para adicionar vídeo.
- <audio>: tag para adicionar áudio.
- <embed>: tag para adicionar qualquer tipo de arquivo de mídia.
- <section>: reune tags de texto ou quaisquer outras que sejam sobre o mesmo tema.
- <article>: pode estar ou não associada a tag section, mas seu objetivo é concentrar as tags de texto, como p.
- <aside>: tag para trazer informações adicionais.

4. LINKS ÚTIL
- Unsplash para imagens.
- icon archive
- favicon.cc: site para você criar um ícone.
- favicon.io: transforma imagem em ícone.
- pexels.
- handbrake

5. FORMATOS DE IMAGEM
- GIMP: software livre para edição de imagens.
- O GIMP permite que você altere o tamanho do arquivo a partir da redução de qualidade de imagem e seu dimensionamento.

6. Hierarquia de títulos
h1: é o título principal.
- O nível do heading vai diminuindo conforme o grau de importância.
- <p>lorem: gera um texto bláblá.
- <p>loremN: gera um texto com uma quantidade palavras específica.

7. CSS INLINE
- Em um mesmo arquivo HTML, é possível utilizar css inline, interno e externo.


7.1 TAGS E ESTILOS
- @charset "UTF-8"
- /**/: adiciona comentário
- font-family
- font-size: unidades de medida px, em.
- font-weight: define o negrito.
- font-style: itálico.
- text-indent: é o espaço antes de começar o parágrafo.
- É possível ter mais de uma classe no mesmo atributo class da tag.
- Vários elementos podem ter a mesma classe.
- ".": para classe.
- "#": para id.
- ":": pseudo-classe.
- "::": pseudo-elemento.
- ">": children.
- user agent: configurações do navegador.
- margin: auto. Deixa o elemento no meio da tela (centralizado)


7.2 PSEUDO-CLASSES E PSEUDO-ELEMENTOS
- Pseudo-classe: depois do seletor + :, pode ter algumas palavras especiais: :hover, :visited, :active, :checked, :empty, :focus. Altera o estado de um elemento.
- Pseudo-elementos: depois do seletor + ::, pode ter algumas palavras especiais: ::before, ::after, ::first-letter, ::first-line. Altera um pedaço específico do elemento.

8. NOMES
- Os nomes para as classes devem ser de acordo com suas funcionalidades; o mesmo se aplica ao id.

8. CAIXAS/BOX
- content: é o conteúdo.
- padding: preenchimento. Distância entre o conteúdo e a borda.
- border: borda. Colada ao padding.
- margin: margem. Colada a borda.
    + Uma distância entre a margem e borda pode ser criada: outline. Ele é calculado com base no tamanho da margin, porque ele está dentro dela.

8.1 TIPOS DE CAIXA
- box-level: o começo de uma tag é na linha seguinte. Reserva a área total da tela para a box e depois começa o conteúdo na linha seguinte.
    + Ex.: div, section, header, main, footer, nav, article, aside.
- inline-level: ocupa somente o tamanho que precisa na mesma linha e depois continua o conteúdo.
    +Ex.: span, strong, emphasis, input, button.
- OBS.: é possível alterar a característica do display, box-level e inline-level, alterando na CSS o elemento display para block ou inline.
    + É possível mesclar o block e o inline. Ex.: display: inline-block;

9. SHORTHAND
- padding: 10px (aplica nas 4 posições).
    + padding: 10px;
    + padding: 10px (top/bottom) 20px (right/left);
- border: tamanho estilo cor.
- margin: 20px 20px 40px 20px --> 20px 20px 40px;
- É possível centralizar apenas um ou mais lados de uma caixa. Ex.: margin: 20px auto 40px auto --> margin: 20px auto 40px;
